<tars>
    <reap>

        #第一阶段加载时间间隔，位是秒
        loadObjectsInterval1 = 1

        #第二阶段（全量）加载时间间隔，单位是秒
        loadObjectsInterval2 = 360

        #node心跳超时时间(一旦超时, 认为这个节点上所有服务都inactive),单位是秒
        nodeTimeout         = 15
        #检查node是否超时的间隔, 单位是秒
        nodeTimeoutInterval = 5

        #主控心跳超时检测时间,单位是秒
        #registryTimeout    = 150

        #主控心跳关闭开关,默认允许心跳检测，要迁移的时候设置次项为N
        # heartbeatoff=Y
     
        asyncthread = 6

        #open day log, default is N; Y means open day log
        openDayLog = N

        #check docker registry && update base image(秒)
        checkDockerRegistry = 60
    </reap>
    <objname>
        #patch对象
        patchServerObj  = tars.tarspatch.PatchObj
        #查询列表对象
        QueryObjName    = tars.tarsregistry.QueryObj
        #node调用的Registry对象
        RegistryObjName = tars.tarsregistry.RegistryObj
    </objname>
    <objcache>
        min_block = 50
        max_block = 200
        factor    = 1.2
        FilePath  = TARS_PATH/tarsregistry/util/objectCache.dat
        FileSize  = 8M
    </objcache>
    <nodeinfo>
        #node默认模板名称
        defaultTemplate = tars.tarsnode
    </nodeinfo>
    <container>
        socket = /var/run/docker.sock
        timeout = 300
    </container>
</tars>
